版本： http://jquery.cuishifeng.cn/
    1.x 对IE8以下的版本兼容性最好
    2.x
    3.x 功能性最强

jquery 导入之后
    调用方法：
        1、 jQuery.xxxx
        2、 $.xxxxx

转换:
    jQuery对象的[0]个索引 ，可以转换成dom对象
    jQuery[0] =》 Dom对象
    Dom对象 =》 $(Dom对象)
    <script src="jquery-1.12.4.min.js"></script>
    <script>
        jQuery.acceptData()
        $.acceptData()
    </script>

查找元素
    Dom
        10个左右

    jQuery
        选择器，直接找到某个或者某类标签
        1、id
            $('#id')
        2、class
            <div class='c1'></div>
            $(".c1")
        3、标签
            <div class='c1'>
                <a>f</a>
                <a>b</a>
            </div>
            <div class="c1">
                <a>k</a>
            </div>
            <div class='c1'></div>
            <div class='c2'></div>
            $('a') 找到所有a标签
            $('div') 同上

            找到所有a标签以及class='c2'的标签
            $('a')
            $('.c2')

            $('a,.c2,$i1') 找到a标签和class=c2标签和id=i1标签


            层级
                找到id='i10'下面所有的a标签
                $('i10 a'） 找到子子孙孙的所有的
                $('i10>a') 只找到儿子一级

            基本的筛选器
                first   last    eq  gt  lt  奇数偶数
                $('#i1 a:first') 找到子子孙孙中的，id=i1下面的第一个a标签
                $('#i1>a:last') 找到儿子中的，id=i1下面的最后一个a标签


                索引
                $('i10 a:eq(0)') # 索引的是位置 id为i10的a标签的第0个值
                                   eq
                                   gt
                                   lt

            属性
                根据自定义属性来获取
                $('[alex]') 具有alex属性的所有标签
                $('[alex="123]') 具有alex属性，值为123的标签

            表单选择器
                有自己专门的使用方式
                   <input type="text"/>
                   <input type="text"/>
                   <input type="file" disabled/>
                   <input type="password"/>

                   使用属性选择器方式
                   $('input[type="text"]') 找到所有input标签下，type=’text'的标签

                   表单选择器方式
                   $(':text') 等同于$('input[type="text"]')
                   $(':disabled') 不可编辑的表单 disabled是表单不可编辑，默认为enabled

            示例：
                多选，全选，反选，取消
                - 选择器
                - $('#tb:checkbox').prop('checked');        获取值
                - $('#tb:checkbox').prop('checked',true);   设置值
                - jQuery方法内置方法 $('#tb:checkbox').xxx
                  jQuery方法内置循环 $('#tb:checkbox').each(function(k){
                                    // k 当前循环元素的索引值
                                    //this,Dom对象，当前循环元素 $(this)
                                    })
                - 三元运算
                     var v = 条件? 真值:假值


            筛选：
                onclick事件触发
                    $('.header').click(function(){}
                筛选器：
                $('#i1).addClass('hide') 添加样式，如果样式里面有hide就不加，没有就加
                $('#i1).removeClass('hide') 移除样式
                $(this).next(); 下一个
                        .nextAll() 下面所有的
                        .nextUntil('#i2')

                $(this).prev(); 上一个
                        prevAll()
                        prevUntil(xxx)

                $(this).parent(); 父标签
                $(this).children(); 子标签
                $(this).siblings() 获取当前标签的所有兄弟标签
                $(this).find('.c1'); 子子孙孙中查找

                菜单点击缩放
                $(this).next().removeClass('hide');
                通过当前点击的this标签，找到父标签的所有兄弟标签，从兄弟标签中find到class=content的标签，加上hide
                $(this).parent().siblings().find('.content').addClass('hide');


                链式编程,两行代码一行解决 作用同上
                $(this).next().removeClass('hide').parent().siblings().find('.content').addClass('hide');

                $('li:eq(1)')
                $('li').eq(1)
                first()
                last()
                hasClass(classname)

        文本操作
            $(..).text()            # 获取文本内容
            $(..).text("aaa")       # 设置文本内容
            $(..).text("<a>1</a>">  # 设置文本内容为标签

            $(..).html()            # 获取
            $(..).html("<a>1</a>")  # 设置

            $(..).val()             # 获取value
            $(..).val("aaa")        # 设置value

            $('#i1).hasClass()      # 可以做开关功能

                $("#i1").click(function(){

                    jquery封装了开关判断的方法   $(".c1").toggleClass('hide');
                    if($(".c1").hasClass('hide')){
                        $(".c1").removeClass('hide');    此部分，等同于  $(".c1").toggleClass('hide');
                    }else{
                        $(".c1").addClass('hide');
                    }

                    //$(".c1").toggleClass('hide');
                })
        样式操作
            addClass('c1')
            removeClass('c1')
            toggleClass('c1')

        属性操作
            $('#i1').attr('type')           获取标签id=i1的属性，type的值，i1里有个input标签
            $('#i1').attr('name','9999‘）   设置自定义属性
            $('#i1').removeAttr('name')     删除属性

            # 专门用户checkbox,radio
            <input id='i2' type='checkbox'/>
            $('#i2').prop('checked',true)    选中checkbox
            $('#i2').prop('checked',false)   不选中checkbox

            $('#i2').prop('checked')        获取值


            .index() 获取索引位置

        文档处理
            append  标签子集的最后
            prepend 标签子集的最前

            after   标签同级后面
            before  标签同级前面

            remove  移除标签
            empty   清空标签内容

            clone   复制一份

            var v = $('#t1').val();
            var temp = "<li>" + v + "</li>"
            $('#u1').append(temp)
            $('#u1').prepend(temp)
            $('#u1').after(temp)
            $('#u1').before(temp)

            用户输入为索引值，根据索引数字删除和清空对应位置标签和内容
            $('#a2').click(function(){
                var index = $('#t1').val();
                $('#u1 li').eq(index).remove()
                $('#u1 li').eq(index).empty()

            })

            复制按钮中使用
            根据索引位置复制，然后将复制标签，追加到最后
            var index = $('#t1').val();
            var v = $('#u1 li').eq(index).cline()
            $('#u1').append(v)

        CSS 处理
        $('#i1').css('color','red');
        抽屉点赞功能:
                - $('t1').append()
                - setInterval
                - 透明度  1 >> 0
                - position
                - 字体大小
                -$('t1').remove() 最后移除点赞效果标签

                function addFavor(self){
                //Dom对象，设置属性值
                var fontSize = 15;
                var top = 0;
                var right = 0;
                var opacity = 1;

                // 对Dom 对象增加标签
                var tag = document.createElement('span');
                // Dom 对象 变成 jquery对象 $(tag)
                // 设置jquery 对象内容，弹窗+1
                $(tag).text('+1');
                //设置对象效果参数 字体红色，初始值
                $(tag).css('color','red');
                $(tag).css('position','absolute');
                $(tag).css('fontSize',fontSize + 'px');
                $(tag).css('right',right + 'px');
                $(tag).css('top',top + 'px');
                $(tag).css('opacity',opacity);

                //self = this, 针对当前点击对象 增加设置的tag= span 标签
                $(self).append(tag);

                // 设置定时器，每100毫秒 字体增大10，位置移动向上和向右 15，透明度减 0.1
                var obj = setInterval(function(){
                    fontSize = fontSize + 10;
                    top = top - 15;
                    right = right - 15;
                    opacity = opacity - 0.1;

                    // 每次css属性变动一次，执行一次tag赋值，显示每次变动效果
                    $(tag).css('fontSize',fontSize + 'px');
                    $(tag).css('right',right + 'px');
                    $(tag).css('top',top + 'px');
                    $(tag).css('opacity',opacity);

                    // 当透明度 小于 0
                    if(opacity < 0){
                        //清除定时器
                        clearInterval(obj);
                        // 移除+1效果标签
                        $(tag).remove();
                    }
                },100);
            }


        位置
            window代指浏览器的滚轮位置
            $(window).scrollTop()        获取
            $(window).scrollTop(0)       设置 0为返回顶部
            scrollLeft([val])            left,right 操作同上

            $('div').scrollTop()         首先div内部有滚轮，然后指定div的滚轮位置


            offset                       指定标签在html中的坐标
            offset()                     获取当前标签坐标，左上角

            offset().left                左侧坐标
            offset().top                 上部坐标

            获取坐标怎么使用


            position()                  指定标签对父标签relative的坐标

            <div style="position:relative">
                <div>
                    <div id='i1' style='position:absolute;height:80px;border:1px'></div>
                </div>
            </div>

            $('i1').height()            获取标签的高度，纯高度
            $('i1').innerHeight()       获取边距+纯高度+？
            $('i1').outerHeight()       获取表框+纯高度+？
            $('i1').outerHeight(true)   获取边框+纯高度+？

        事件绑定方式
            Dom 三种绑定方式
            jQuery:
                $('i1').click()
                $('i1').bind('click',function(){})  绑定
                $('i1').unbind('click',function(){
                }) 解绑

                .c1下面的a标签绑定事件
                $('.c1').delegate('a','click',function(){
                })

                $('.c1').undelegate('a','click',function(){
                })

                $（'.c1').on('click',function(){
                })
                $（'.c1').off('click',function(){
                })


                delegate 叫委托, 对于增加append的东西，同样想具有某个功能，就需要使用到delegate的委托方式，其他方式都不行
                .c1下面的a标签绑定事件
                $('.c1').delegate('a','click',function(){
                })

                $('.c1').undelegate('a','click',function(){
                })

                给新ul标签下，新增加的li标签绑定click事件
                $('ul').delegate('li','click',function(){
                })

        当页面框架加载完成之后自动执行，*****必须要等待所有元素加载完成，比如图片全部加载
        $(function(){
        }

        jQuery 扩展
            $.extend        $.方法
            $.fn.extend     $.(选择器).方法

            (function(){
                var status = 1;
                // 封装变量
            })(jQuery)

